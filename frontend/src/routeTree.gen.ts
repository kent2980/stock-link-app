/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutCategoryImport } from './routes/_layout/category'
import { Route as LayoutIndexDateStrImport } from './routes/_layout/index/$dateStr'
import { Route as LayoutIndexIndustryIndustry17Import } from './routes/_layout/index/industry.$industry_17'
import { Route as LayoutIndexDateDateStrImport } from './routes/_layout/index/date.$dateStr'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCategoryRoute = LayoutCategoryImport.update({
  path: '/category',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIndexDateStrRoute = LayoutIndexDateStrImport.update({
  path: '/index/$dateStr',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIndexIndustryIndustry17Route =
  LayoutIndexIndustryIndustry17Import.update({
    path: '/index/industry/$industry_17',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutIndexDateDateStrRoute = LayoutIndexDateDateStrImport.update({
  path: '/index/date/$dateStr',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/category': {
      preLoaderRoute: typeof LayoutCategoryImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/index/$dateStr': {
      preLoaderRoute: typeof LayoutIndexDateStrImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/index/date/$dateStr': {
      preLoaderRoute: typeof LayoutIndexDateDateStrImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/index/industry/$industry_17': {
      preLoaderRoute: typeof LayoutIndexIndustryIndustry17Import
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutCategoryRoute,
    LayoutIndexRoute,
    LayoutIndexDateStrRoute,
    LayoutIndexDateDateStrRoute,
    LayoutIndexIndustryIndustry17Route,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
