app/scripts/logo_downloader.py:130: error: Value of type "PageElement" is not indexable  [index]
app/scripts/logo_downloader.py:133: error: Value of type "PageElement" is not indexable  [index]
app/scripts/logo_downloader.py:149: error: Argument 2 to "save_file" has incompatible type "bytes"; expected "str"  [arg-type]
app/scripts/logo_downloader.py:163: error: Item "None" of "Response | None" has no attribute "status_code"  [union-attr]
app/scripts/logo_downloader.py:167: error: Item "None" of "Response | None" has no attribute "text"  [union-attr]
app/scripts/logo_downloader.py:171: error: Item "None" of "Response | None" has no attribute "content"  [union-attr]
app/scripts/logo_downloader.py:171: error: Argument 2 to "save_file" has incompatible type "bytes | Any"; expected "str"  [arg-type]
app/scripts/logo_downloader.py:174: error: Item "None" of "Response | None" has no attribute "content"  [union-attr]
app/scripts/logo_downloader.py:174: error: Argument 2 to "save_file" has incompatible type "bytes | Any"; expected "str"  [arg-type]
app/scripts/logo_downloader.py:177: error: Item "None" of "Response | None" has no attribute "content"  [union-attr]
app/scripts/logo_downloader.py:177: error: Argument 2 to "save_file" has incompatible type "bytes | Any"; expected "str"  [arg-type]
app/scripts/logo_downloader.py:180: error: Item "None" of "Response | None" has no attribute "content"  [union-attr]
app/scripts/logo_downloader.py:180: error: Argument 2 to "save_file" has incompatible type "bytes | Any"; expected "str"  [arg-type]
app/scripts/logo_downloader.py:183: error: Item "None" of "Response | None" has no attribute "status_code"  [union-attr]
app/scripts/logo_downloader.py:192: error: Module "os" does not explicitly export attribute "sys"  [attr-defined]
app/scripts/logo_downloader.py:194: error: Module "os" does not explicitly export attribute "sys"  [attr-defined]
app/models.py:403: error: Incompatible types in assignment (expression has type "str | None", base class "XbrlBase" defined the type as "int | None")  [assignment]
app/models.py:644: error: Incompatible types in assignment (expression has type "str", base class "BaseModel" defined the type as "Callable[[BaseModel], str]")  [assignment]
app/models.py:674: error: Incompatible types in assignment (expression has type "str", base class "BaseModel" defined the type as "Callable[[BaseModel], str]")  [assignment]
app/api/endpoints/stock_wiki/schema.py:2: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/stock_wiki/schema.py:2: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/manager/schema/settings.py:1: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/manager/schema/settings.py:1: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/jpx_info/schema.py:2: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/jpx_info/schema.py:2: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_summary/summaryItems.py:14: error: Incompatible default for argument "from_names" (default has type "None", argument has type "list[str]")  [assignment]
app/api/endpoints/ix_summary/summaryItems.py:14: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
app/api/endpoints/ix_summary/summaryItems.py:14: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
app/api/endpoints/ix_summary/summaryItems.py:31: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:37: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:43: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:49: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:55: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:61: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:67: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:73: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/summaryItems.py:79: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/structItem.py:12: error: Name "period" already defined on line 5  [no-redef]
app/api/endpoints/ix_summary/structItem.py:17: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/structItem.py:20: error: Name "structs" already defined on line 6  [no-redef]
app/api/endpoints/ix_summary/structItem.py:25: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_source/schema.py:2: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_source/schema.py:2: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_schema/schema.py:2: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_schema/schema.py:2: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_qual/schema.py:2: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_qual/schema.py:2: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_qual/schema.py:60: error: Missing type parameters for generic type "dict"  [type-arg]
app/api/endpoints/ix_qual/schema.py:61: error: Missing type parameters for generic type "dict"  [type-arg]
app/api/endpoints/ix_pre/schema.py:5: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_pre/schema.py:5: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_path/schema.py:2: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_path/schema.py:2: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_non_numeric/schema.py:2: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_non_numeric/schema.py:2: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_non_fraction/schema.py:6: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_non_fraction/schema.py:6: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_lab/schema.py:1: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_lab/schema.py:1: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_info/crud.py:14: error: Incompatible return value type (got "IxHeadTitle | None", expected "IxHeadTitle")  [return-value]
app/api/endpoints/ix_head/schema.py:3: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_head/schema.py:3: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_def/schema.py:5: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_def/schema.py:5: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/ix_calc/schema.py:5: error: Module "app.models" does not explicitly export attribute "Field"  [attr-defined]
app/api/endpoints/ix_calc/schema.py:5: error: Module "app.models" does not explicitly export attribute "SQLModel"  [attr-defined]
app/api/endpoints/stock_wiki/crud.py:23: error: Incompatible return value type (got "StockWiki", expected "StockWikiCreate")  [return-value]
app/api/endpoints/stock_wiki/crud.py:26: error: Argument "orig" to "IntegrityError" has incompatible type "BaseException | None"; expected "BaseException"  [arg-type]
app/api/endpoints/jpx_info/crud.py:86: error: "str" has no attribute "like"  [attr-defined]
app/api/endpoints/jpx_info/crud.py:93: error: Item "int" of "int | None" has no attribute "in_"  [union-attr]
app/api/endpoints/jpx_info/crud.py:93: error: Item "None" of "int | None" has no attribute "in_"  [union-attr]
app/api/endpoints/jpx_info/crud.py:111: error: "str" has no attribute "like"  [attr-defined]
app/api/endpoints/jpx_info/crud.py:117: error: Incompatible return value type (got "Sequence[JpxStockInfo]", expected "list[JpxStockInfo]")  [return-value]
app/api/endpoints/jpx_info/crud.py:130: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:130: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:131: error: Item "int" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:131: error: Item "None" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:134: error: Item "str" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:134: error: Item "None" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:135: error: Item "int" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:135: error: Item "None" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:137: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:143: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:143: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:144: error: Item "int" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:144: error: Item "None" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:147: error: Item "str" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:147: error: Item "None" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:148: error: Item "int" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:148: error: Item "None" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:150: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:169: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:169: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:170: error: Item "int" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:170: error: Item "None" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:172: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:178: error: Item "int" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:178: error: Item "None" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:199: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:199: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:200: error: Item "int" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:200: error: Item "None" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:201: error: Argument 1 to "count" has incompatible type "str"; expected "ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | Literal['*', 1] | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:204: error: Item "str" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:204: error: Item "None" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:205: error: Item "int" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:205: error: Item "None" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:209: error: Argument 2 to "group_by" of "GenerativeSelect" has incompatible type "int | None"; expected "str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement"  [arg-type]
app/api/endpoints/jpx_info/crud.py:211: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:216: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:216: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:217: error: Item "int" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:217: error: Item "None" of "int | None" has no attribute "label"  [union-attr]
app/api/endpoints/jpx_info/crud.py:218: error: Argument 1 to "count" has incompatible type "str"; expected "ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | Literal['*', 1] | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:221: error: Item "str" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:221: error: Item "None" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:222: error: Item "int" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:222: error: Item "None" of "int | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:226: error: Argument 2 to "group_by" of "GenerativeSelect" has incompatible type "int | None"; expected "str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement"  [arg-type]
app/api/endpoints/jpx_info/crud.py:228: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:250: error: Item "str" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:250: error: Item "None" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:252: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/jpx_info/crud.py:259: error: Item "str" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:259: error: Item "None" of "str | None" has no attribute "is_not"  [union-attr]
app/api/endpoints/jpx_info/crud.py:261: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/ix_qual/crud.py:27: error: Incompatible return value type (got "IxQualitative", expected "IxQualitativePublic")  [return-value]
app/api/endpoints/ix_head/crud.py:66: error: Item "None" of "IxHeadTitle | None" has no attribute "report_type"  [union-attr]
app/api/endpoints/ix_head/crud.py:66: error: Item "None" of "str | Any | None" has no attribute "startswith"  [union-attr]
app/api/endpoints/ix_head/crud.py:67: error: Item "None" of "IxHeadTitle | None" has no attribute "current_period"  [union-attr]
app/api/endpoints/ix_head/crud.py:70: error: Item "None" of "IxHeadTitle | None" has no attribute "is_active"  [union-attr]
app/api/endpoints/ix_calc/crud.py:9: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_calc/crud.py:17: error: Function is missing a return type annotation  [no-untyped-def]
app/tests/utils/item.py:16: error: Argument "owner_id" to "create_item" has incompatible type "UUID"; expected "int"  [arg-type]
app/api/endpoints/ix_summary/crud.py:47: error: Incompatible return value type (got "Sequence[IxHeadTitle]", expected "list[IxHeadTitle]")  [return-value]
app/api/endpoints/ix_summary/crud.py:72: error: Item "str" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_summary/crud.py:72: error: Item "None" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_summary/crud.py:80: error: Item "None" of "str | None" has no attribute "startswith"  [union-attr]
app/api/endpoints/ix_summary/crud.py:106: error: Item "str" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_summary/crud.py:106: error: Item "None" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_summary/crud.py:148: error: No overload variant of "select" matches argument types "int | None", "str", "str", "str", "str | None", "str | None", "str | None", "Decimal", "Any", "Any", "Label[int]"  [call-overload]
app/api/endpoints/ix_summary/crud.py:148: note: Possible overload variants:
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /) -> SelectOfScalar[_T0]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(_TScalar_0, /) -> SelectOfScalar[_TScalar_0]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _T1] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_T0, _T1]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1) -> Select[tuple[_T0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_TScalar_0, _T1]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1) -> Select[tuple[_TScalar_0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _T1, _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_T0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_T0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2]) -> Select[tuple[_T0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_T0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _T1, _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_T0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:148: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:157: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:157: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:158: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:158: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:214: error: No overload variant of "select" matches argument types "int | None", "str", "str", "str", "str | None", "str | None", "str | None", "Decimal", "Any", "Any", "Any"  [call-overload]
app/api/endpoints/ix_summary/crud.py:214: note: Possible overload variants:
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /) -> SelectOfScalar[_T0]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(_TScalar_0, /) -> SelectOfScalar[_TScalar_0]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _T1] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_T0, _T1]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1) -> Select[tuple[_T0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_TScalar_0, _T1]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1) -> Select[tuple[_TScalar_0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _T1, _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_T0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_T0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2]) -> Select[tuple[_T0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_T0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _T1, _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_T0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:214: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:223: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:223: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:224: error: Item "str" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:224: error: Item "None" of "str | None" has no attribute "label"  [union-attr]
app/api/endpoints/ix_summary/crud.py:274: error: No overload variant of "select" matches argument types "Any", "Any", "Any", "Any", "Any", "Label[Any]", "Any", "Any", "Label[Any]"  [call-overload]
app/api/endpoints/ix_summary/crud.py:274: note: Possible overload variants:
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /) -> SelectOfScalar[_T0]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(_TScalar_0, /) -> SelectOfScalar[_TScalar_0]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _T1] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_T0, _T1]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1) -> Select[tuple[_T0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_TScalar_0, _T1]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1) -> Select[tuple[_TScalar_0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _T1, _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_T0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_T0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2]) -> Select[tuple[_T0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_T0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _T1, _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_T0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:274: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:278: error: "str" has no attribute "label"  [attr-defined]
app/api/endpoints/ix_summary/crud.py:364: error: "str" has no attribute "in_"  [attr-defined]
app/api/endpoints/ix_summary/crud.py:371: error: "list[str]" has no attribute "op"; maybe "pop"?  [attr-defined]
app/api/endpoints/ix_summary/crud.py:375: error: "list[str]" has no attribute "op"; maybe "pop"?  [attr-defined]
app/api/endpoints/ix_summary/crud.py:398: error: "str" has no attribute "in_"  [attr-defined]
app/api/endpoints/ix_summary/crud.py:450: error: No overload variant of "select" matches argument type "SelectOfScalar[IxHeadTitle]"  [call-overload]
app/api/endpoints/ix_summary/crud.py:450: note: Possible overload variants:
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /) -> SelectOfScalar[_T0]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(_TScalar_0, /) -> SelectOfScalar[_TScalar_0]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _T1] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_T0, _T1]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1) -> Select[tuple[_T0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /) -> Select[tuple[_TScalar_0, _T1]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1) -> Select[tuple[_TScalar_0, _TScalar_1]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _T1, _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_T0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_T0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2]) -> Select[tuple[_T0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_T0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _T1, _T2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _T1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _T1, _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_T0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_T0, _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(TypedColumnsClauseRole[_T0] | SQLCoreOperations[_T0] | type[_T0], /, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_T0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _T1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3]) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T1, _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, TypedColumnsClauseRole[_T1] | SQLCoreOperations[_T1] | type[_T1], /, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _T1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T2, _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, TypedColumnsClauseRole[_T2] | SQLCoreOperations[_T2] | type[_T2], /, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _T2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _T3] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, TypedColumnsClauseRole[_T3] | SQLCoreOperations[_T3] | type[_T3], /) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _T3]]
app/api/endpoints/ix_summary/crud.py:450: note:     def [_TScalar_0: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_1: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_2: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None), _TScalar_3: (Column[Any], Sequence[Any], Mapping[Any, Any], UUID, datetime, float, int, bool, bytes, str, None)] select(entity_0: _TScalar_0, entity_1: _TScalar_1, entity_2: _TScalar_2, entity_3: _TScalar_3) -> Select[tuple[_TScalar_0, _TScalar_1, _TScalar_2, _TScalar_3]]
app/api/endpoints/ix_summary/crud.py:464: error: Item "str" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_summary/crud.py:464: error: Item "None" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_summary/utils.py:125: error: Function is missing a return type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/utils.py:146: error: Argument 1 to "get_attr_value" has incompatible type "IxHeadTitle | None"; expected "IxHeadTitle"  [arg-type]
app/api/endpoints/ix_summary/utils.py:227: error: Argument "ix_non_fractions" to "SummaryItems" has incompatible type "Sequence[IxNonFraction]"; expected "list[IxNonFraction] | None"  [arg-type]
app/api/endpoints/ix_summary/utils.py:233: error: Function is missing a type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/utils.py:244: error: Function is missing a type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/utils.py:249: error: Call to untyped function "create_fin_value_base" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:255: error: Function is missing a type annotation  [no-untyped-def]
app/api/endpoints/ix_summary/utils.py:261: error: Call to untyped function "set_result_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:263: error: Call to untyped function "set_result_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:266: error: Call to untyped function "set_result_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:268: error: Call to untyped function "set_result_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:271: error: Call to untyped function "set_result_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:273: error: Call to untyped function "set_result_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:297: error: Item "None" of "TreeItemsList | None" has no attribute "data"  [union-attr]
app/api/endpoints/ix_summary/utils.py:299: error: Unsupported right operand type for in ("list[str] | None")  [operator]
app/api/endpoints/ix_summary/utils.py:317: error: Item "None" of "list[IxNonFraction] | None" has no attribute "__iter__" (not iterable)  [union-attr]
app/api/endpoints/ix_summary/utils.py:319: error: Item "None" of "list[FinValueFinance] | None" has no attribute "__iter__" (not iterable)  [union-attr]
app/api/endpoints/ix_summary/utils.py:320: error: Value of type "dict[str, str] | None" is not indexable  [index]
app/api/endpoints/ix_summary/utils.py:321: error: Item "None" of "FinValueWithChange | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:322: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:323: error: Item "None" of "FinValueWithChange | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:324: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:325: error: Item "None" of "FinValueWithChange | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:326: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:327: error: Item "None" of "FinValueWithChange | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:328: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:331: error: Item "None" of "IxHeadTitle | None" has no attribute "report_type"  [union-attr]
app/api/endpoints/ix_summary/utils.py:332: error: Item "None" of "IxHeadTitle | None" has no attribute "fy_year_end"  [union-attr]
app/api/endpoints/ix_summary/utils.py:333: error: Item "None" of "IxHeadTitle | None" has no attribute "current_period"  [union-attr]
app/api/endpoints/ix_summary/utils.py:337: error: Item "None" of "IxHeadTitle | None" has no attribute "item_key"  [union-attr]
app/api/endpoints/ix_summary/utils.py:356: error: Item "None" of "FinValueWithChange | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:356: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:357: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:358: error: Item "None" of "FinValueWithChange | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:358: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:359: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:360: error: Item "None" of "FinValueWithChange | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:360: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:361: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:362: error: Item "None" of "FinValueWithChange | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:362: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:363: error: Call to untyped function "set_struct_item_value" in typed context  [no-untyped-call]
app/api/endpoints/ix_summary/utils.py:368: error: Missing return statement  [return]
app/api/endpoints/ix_summary/utils.py:392: error: Item "None" of "FinValueDividends | None" has no attribute "TotalDividendPaidAnnual"  [union-attr]
app/api/endpoints/ix_summary/utils.py:392: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:392: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:393: error: Item "None" of "FinValueDividends | None" has no attribute "TotalDividendPaidAnnual"  [union-attr]
app/api/endpoints/ix_summary/utils.py:393: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:395: error: Item "None" of "FinValueDividends | None" has no attribute "PayoutRatio"  [union-attr]
app/api/endpoints/ix_summary/utils.py:395: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:395: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:396: error: Item "None" of "FinValueDividends | None" has no attribute "PayoutRatio"  [union-attr]
app/api/endpoints/ix_summary/utils.py:396: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:399: error: Item "None" of "FinValueDividends | None" has no attribute "RatioTotalAmountOfDividendTotalNetAssets"  [union-attr]
app/api/endpoints/ix_summary/utils.py:399: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:399: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:403: error: Item "None" of "FinValueDividends | None" has no attribute "RatioTotalAmountOfDividendTotalNetAssets"  [union-attr]
app/api/endpoints/ix_summary/utils.py:403: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:407: error: Item "None" of "FinValueDividends | None" has no attribute "RatioTotalAmountOfDividendTotalNetAssets"  [union-attr]
app/api/endpoints/ix_summary/utils.py:407: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:407: error: Unsupported operand types for in ("str | Any | None" and "list[str]")  [operator]
app/api/endpoints/ix_summary/utils.py:411: error: Item "None" of "FinValueDividends | None" has no attribute "RatioTotalAmountOfDividendTotalNetAssets"  [union-attr]
app/api/endpoints/ix_summary/utils.py:411: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:435: error: Item "None" of "TreeItemsList | None" has no attribute "data"  [union-attr]
app/api/endpoints/ix_summary/utils.py:437: error: Unsupported right operand type for in ("list[str] | None")  [operator]
app/api/endpoints/ix_summary/utils.py:447: error: Item "None" of "list[IxNonFraction] | None" has no attribute "__iter__" (not iterable)  [union-attr]
app/api/endpoints/ix_summary/utils.py:451: error: Item "None" of "FinValueDividends | None" has no attribute "FirstQuarterMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:451: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:452: error: Item "None" of "FinValueDividends | None" has no attribute "FirstQuarterMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:452: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:453: error: Item "None" of "FinValueDividends | None" has no attribute "SecondQuarterMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:453: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:454: error: Item "None" of "FinValueDividends | None" has no attribute "SecondQuarterMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:454: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:455: error: Item "None" of "FinValueDividends | None" has no attribute "ThirdQuarterMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:455: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:456: error: Item "None" of "FinValueDividends | None" has no attribute "ThirdQuarterMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:456: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:457: error: Item "None" of "FinValueDividends | None" has no attribute "YearEndMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:457: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:458: error: Item "None" of "FinValueDividends | None" has no attribute "YearEndMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:458: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:459: error: Item "None" of "FinValueDividends | None" has no attribute "AnnualMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:459: error: Item "None" of "FinValueWithDividends | Any | None" has no attribute "context"  [union-attr]
app/api/endpoints/ix_summary/utils.py:460: error: Item "None" of "FinValueDividends | None" has no attribute "AnnualMember"  [union-attr]
app/api/endpoints/ix_summary/utils.py:460: error: Argument 1 to "get_metric_schema" has incompatible type "FinValueWithDividends | Any | None"; expected "FinValueWithDividends"  [arg-type]
app/api/endpoints/ix_summary/utils.py:462: error: Argument 2 to "set_dividends_other" has incompatible type "list[IxNonFraction] | None"; expected "list[IxNonFraction]"  [arg-type]
app/api/endpoints/ix_summary/utils.py:465: error: Item "None" of "IxHeadTitle | None" has no attribute "report_type"  [union-attr]
app/api/endpoints/ix_summary/utils.py:466: error: Item "None" of "IxHeadTitle | None" has no attribute "fy_year_end"  [union-attr]
app/api/endpoints/ix_summary/utils.py:467: error: Item "None" of "IxHeadTitle | None" has no attribute "current_period"  [union-attr]
app/api/endpoints/ix_summary/utils.py:471: error: Item "None" of "IxHeadTitle | None" has no attribute "item_key"  [union-attr]
app/api/endpoints/ix_summary/utils.py:498: error: Argument "from_names" to "get_summary_items" has incompatible type "dict[str, str]"; expected "list[str]"  [arg-type]
app/api/endpoints/ix_info/router.py:39: error: Item "str" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_info/router.py:39: error: Item "None" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_info/router.py:59: error: Item "None" of "IxHeadTitle | None" has no attribute "securities_code"  [union-attr]
app/api/endpoints/ix_info/router.py:59: error: Item "None" of "IxHeadTitle | None" has no attribute "company_name"  [union-attr]
app/api/endpoints/ix_info/router.py:59: error: Item "None" of "IxHeadTitle | None" has no attribute "document_name"  [union-attr]
app/api/endpoints/ix_info/router.py:78: error: Incompatible return value type (got "DocumentListPublic", expected "IxHeadTitle")  [return-value]
app/api/endpoints/ix_info/router.py:118: error: Argument 1 to "order_by" of "GenerativeSelect" has incompatible type "int | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/ix_info/router.py:122: error: Item "str" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_info/router.py:122: error: Item "None" of "str | None" has no attribute "in_"  [union-attr]
app/api/endpoints/ix_info/router.py:164: error: Item "None" of "date | None" has no attribute "year"  [union-attr]
app/api/endpoints/ix_info/router.py:164: error: Invalid index type "str | None" for "dict[str, str]"; expected type "str"  [index]
app/api/endpoints/ix_info/router.py:166: error: Incompatible types in assignment (expression has type "str | None", variable has type "str")  [assignment]
app/api/endpoints/ix_info/router.py:206: error: Item "str" of "str | None" has no attribute "asc"  [union-attr]
app/api/endpoints/ix_info/router.py:206: error: Item "None" of "str | None" has no attribute "asc"  [union-attr]
app/api/endpoints/ix_info/router.py:207: error: Argument 1 to "distinct" of "Select" has incompatible type "str | None"; expected "ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement"  [arg-type]
app/api/endpoints/ix_info/router.py:217: error: Item "tuple[str, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "securities_code"  [union-attr]
app/api/endpoints/ix_info/router.py:217: error: Item "tuple[str | None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "securities_code"  [union-attr]
app/api/endpoints/ix_info/router.py:217: error: Item "tuple[None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "securities_code"  [union-attr]
app/api/endpoints/ix_info/router.py:217: error: Item "tuple[str, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "url"  [union-attr]
app/api/endpoints/ix_info/router.py:217: error: Item "tuple[str | None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "url"  [union-attr]
app/api/endpoints/ix_info/router.py:217: error: Item "tuple[None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "url"  [union-attr]
app/api/endpoints/ix_info/router.py:219: error: Item "tuple[str, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "securities_code"  [union-attr]
app/api/endpoints/ix_info/router.py:219: error: Item "tuple[str | None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "securities_code"  [union-attr]
app/api/endpoints/ix_info/router.py:219: error: Item "tuple[None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "securities_code"  [union-attr]
app/api/endpoints/ix_info/router.py:219: error: Item "tuple[str, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "url"  [union-attr]
app/api/endpoints/ix_info/router.py:219: error: Item "tuple[str | None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "url"  [union-attr]
app/api/endpoints/ix_info/router.py:219: error: Item "tuple[None, ...]" of "tuple[str, str] | tuple[str, None] | tuple[None, str] | tuple[None, None]" has no attribute "url"  [union-attr]
app/api/endpoints/ix_info/router.py:230: error: Value of type variable "_TScalar_0" of "select" cannot be "date | None"  [type-var]
app/api/endpoints/ix_info/router.py:232: error: Argument 1 to "count" has incompatible type "date | None"; expected "ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | Literal['*', 1] | None"  [arg-type]
app/api/endpoints/ix_info/router.py:235: error: Argument 1 to "group_by" of "GenerativeSelect" has incompatible type "date | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/ix_info/router.py:264: error: Value of type variable "_TScalar_0" of "select" cannot be "date | None"  [type-var]
app/api/endpoints/ix_info/router.py:266: error: Argument 1 to "count" has incompatible type "date | None"; expected "ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | Literal['*', 1] | None"  [arg-type]
app/api/endpoints/ix_info/router.py:270: error: Argument 1 to "group_by" of "GenerativeSelect" has incompatible type "date | None"; expected "Literal[_NoArg.NO_ARG] | str | ColumnElement[Any] | _HasClauseElement[Any] | SQLCoreOperations[Any] | ExpressionElementRole[Any] | TypedColumnsClauseRole[Any] | Callable[[], ColumnElement[Any]] | LambdaElement | None"  [arg-type]
app/api/endpoints/ix_def/router.py:28: error: Incompatible return value type (got "IxDefinitionLoc", expected "IxDefinitionArc")  [return-value]
app/api/endpoints/ix_calc/router.py:27: error: Returning Any from function declared to return "IxCalculationLoc"  [no-any-return]
app/api/endpoints/ix_calc/router.py:43: error: Returning Any from function declared to return "IxCalculationArc"  [no-any-return]
app/api/endpoints/ix_summary/router.py:45: error: Argument "code" to "get_head_item_key" has incompatible type "str | None"; expected "str"  [arg-type]
app/api/endpoints/ix_summary/router.py:111: error: Argument "code" to "get_head_item_key" has incompatible type "str | None"; expected "str"  [arg-type]
app/api/endpoints/ix_summary/router.py:177: error: Argument "code" to "get_head_item_key" has incompatible type "str | None"; expected "str"  [arg-type]
app/api/endpoints/ix_summary/router.py:247: error: Argument "code" to "get_head_item_key" has incompatible type "str | None"; expected "str"  [arg-type]
app/api/endpoints/ix_summary/router.py:359: error: Argument "code" to "get_head_item_key" has incompatible type "str | None"; expected "str"  [arg-type]
app/api/endpoints/ix_summary/router.py:403: error: Argument "code" to "get_head_item_key" has incompatible type "str | None"; expected "str"  [arg-type]
app/api/endpoints/ix_summary/router.py:464: error: Argument "code" to "get_head_item_key" has incompatible type "str | None"; expected "str"  [arg-type]
app/main.py:41: error: Function is missing a return type annotation  [no-untyped-def]
Found 293 errors in 32 files (checked 113 source files)
